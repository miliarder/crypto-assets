{"ast":null,"code":"var _jsxFileName = \"/Users/sandro.brayen/Documents/private-project/crypto-asset/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useMemo } from 'react';\nimport ImageMasonry from 'react-image-masonry';\nimport { Chart } from 'react-google-charts';\nimport Item from './components/Item';\nimport Note from './components/Note';\nimport redDot from './img/red-dot.png';\nimport greenDot from './img/green-dot.png';\nimport './style.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatter = new Intl.NumberFormat('id', {\n  style: 'currency',\n  currency: 'IDR',\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 0\n});\nconst pairs = {\n  btc_idr: {\n    asset: 0.10091006 //cold\n    + 0.0353102,\n    //tokocrypto\n    name: 'BTC',\n    color: '#EBAC1C'\n  },\n  eth_idr: {\n    asset: 0.56278735 //cold\n    + 0.06709137,\n    //tokocrypto\n    name: 'ETH',\n    color: '#000000'\n  },\n  ada_idr: {\n    asset: 2497.666734 // 553.115524 + 283.0657 + 169.829 + 924.22351 + 567.433\n    + 305.15864,\n    //tokocrypto\n    name: 'ADA',\n    color: '#1365EA'\n  },\n  theta_idr: {\n    asset: 177.9221,\n    name: 'THETA',\n    color: '#5C50DD'\n  },\n  bnb_idr: {\n    asset: 0.61486509,\n    name: 'BNB',\n    color: '#FC5731'\n  },\n  cake_idr: {\n    asset: 5.7543806 + 21.6,\n    //indodax\n    name: 'CAKE',\n    color: '#5CACDD'\n  },\n  uni_idr: {\n    asset: 5.81466346,\n    name: 'UNI',\n    color: '#fcc19b'\n  },\n  link_idr: {\n    asset: 5.37634408,\n    name: 'LINK',\n    color: '#fcc19b'\n  },\n  sol_idr: {\n    asset: 3.76353346,\n    name: 'SOL',\n    color: '#5CACDD'\n  },\n  xrp_idr: {\n    asset: 46.95399,\n    name: 'XRP',\n    color: '#CFE542'\n  },\n  doge_idr: {\n    asset: 1023.80390000,\n    name: 'DOGE',\n    color: '#fce51c'\n  },\n  usdt_idr: {\n    asset: 1129 * 0,\n    name: 'USDT',\n    color: '#8c8c8c'\n  }\n};\nconst BINACE_pairs = {\n  ONEUSDT: {\n    asset: 1853.43648,\n    name: 'ONE',\n    color: '#8c8c8c',\n    inUSD: true\n  },\n  ADAUSDT: {\n    asset: 0,\n    name: 'ADA',\n    color: '#8c8c8c',\n    inUSD: true\n  }\n};\n\nfunction fngColouring(indexValue) {\n  let colorCode = '';\n\n  if (indexValue >= 90) {\n    colorCode = '65c64c';\n  }\n\n  if (indexValue < 90) {\n    colorCode = '79d23c';\n  }\n\n  if (indexValue <= 75) {\n    colorCode = '9bbe44';\n  }\n\n  if (indexValue <= 63) {\n    colorCode = 'c6bf22';\n  }\n\n  if (indexValue <= 54) {\n    colorCode = 'dfce60';\n  }\n\n  if (indexValue <= 46) {\n    colorCode = 'd8bc59';\n  }\n\n  if (indexValue <= 35) {\n    colorCode = 'e39d64';\n  }\n\n  if (indexValue <= 25) {\n    colorCode = 'd17339';\n  }\n\n  if (indexValue <= 10) {\n    colorCode = 'b74d34';\n  }\n\n  return colorCode;\n}\n\nconst modal = 61419031 - 4971934 - 2200714 - 3367336 + 10000000 + 5000000 + 5000000 + 1000000 + 1500000 + 1500000 + 1500000 + 2000000 + 2500000 + 3000000 + 3000000 + 2000000 + 1500000 + 1500000 + 1500000 + 3000000 + 3000000 + 2483889 + 3500000 + 3000000 + 3000000 + 1000000 + 1000000 + 381600 + 619504 + 5000000 + 2504010 + 4000000 + 4000000 + 1500000 + 750000 + 500000 + 250000 + 3000000 + 5000000 + 800000;\nlet timer;\nexport default function App() {\n  _s();\n\n  const [grandTotal, setTotal] = useState(0);\n  const [summary, setSummary] = useState({});\n  const [precent, setPercent] = useState(0);\n  const [BTCTotal, setBTCTotal] = useState(0);\n  const [fearIndex, setFearIndex] = useState([]);\n  const [rsi, setRsi] = useState(0);\n  useEffect(() => {\n    clearInterval(timer);\n\n    const fetchData = async () => {\n      try {\n        const requestArr = [];\n        requestArr.push(fetch(`https://api.binance.com/api/v3/ticker/price?symbol=USDTBIDR`, {\n          cache: 'no-cache'\n        }));\n        requestArr.push(fetch(`https://indodax.com/api/summaries`, {\n          cache: 'no-cache'\n        }));\n\n        for (let key in BINACE_pairs) {\n          const pair = BINACE_pairs[key];\n          const {\n            name\n          } = pair;\n          requestArr.push(fetch(`https://api.binance.com/api/v3/ticker/price?symbol=` + key, {\n            cache: 'no-cache'\n          }));\n        }\n\n        const [BIDRRes, idxRes, ...tkoRes] = await Promise.all(requestArr);\n        const {\n          price: IDRPrice,\n          symbol\n        } = await BIDRRes.json();\n        const idxData = await idxRes.json();\n        const {\n          tickers\n        } = idxData;\n        let total = 0;\n        const summaryData = {};\n        let keys = Object.keys(pairs);\n\n        for (let i = 0; i < keys.length; i++) {\n          let key = keys[i];\n          const coin = pairs[key].asset;\n          const name = pairs[key].name;\n          const color = pairs[key].color;\n          const {\n            last: price\n          } = tickers[key];\n          const v = coin * Number(price);\n\n          if (name === 'BTC') {\n            setBTCTotal(v);\n          }\n\n          summaryData[key] = {\n            pair: key.replace('_', '').toUpperCase(),\n            color,\n            name,\n            coin,\n            price: price,\n            total: v\n          };\n          total += v;\n        }\n\n        for (let i in tkoRes) {\n          const res = await tkoRes[i].json();\n          let {\n            price,\n            symbol\n          } = res;\n\n          if (symbol in BINACE_pairs) {\n            const {\n              asset,\n              name,\n              color,\n              inUSD\n            } = BINACE_pairs[symbol];\n\n            if (inUSD) {\n              price = IDRPrice * price;\n            }\n\n            const v = asset * Number(price);\n            summaryData[symbol] = {\n              pair: symbol,\n              color,\n              name,\n              coin: asset,\n              price,\n              total: v\n            };\n            total += v;\n          }\n        }\n\n        const growthPercent = ((total - modal) / (modal / 100)).toFixed(1);\n        setTotal(total);\n        setSummary(summaryData);\n        setPercent(growthPercent);\n        document.title = `My Gain:  ${formatter.format(total - modal)} (${growthPercent}%)`;\n        timer = setTimeout(() => {\n          fetchData();\n        }, 3000);\n      } catch (e) {\n        console.log('error', e);\n        fetchData();\n      }\n\n      try {\n        const res = await fetch(`https://api.alternative.me/fng/?limit=2`, {\n          cache: 'no-cache'\n        });\n        const data = await res.json();\n        setFearIndex(data.data);\n      } catch (e) {\n        console.log('error', e);\n      }\n\n      try {\n        const res = await fetch(`https://api.taapi.io/rsi?secret=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb2JyYXllbkBnbWFpbC5jb20iLCJpYXQiOjE2NDI4ODQyNTksImV4cCI6Nzk1MDA4NDI1OX0.ZYR1fjAYGGkUgW1DpcUxYbB4cQ9ff9jHSJCWg5YShAc&exchange=binance&symbol=BTC/USDT&interval=1d`);\n        const data = await res.json();\n\n        if (data.value) {\n          setRsi(data.value);\n        }\n      } catch (e) {\n        console.log('error', e);\n      }\n    };\n\n    fetchData();\n  }, []);\n  const isLoss = grandTotal < modal;\n  const gain = grandTotal - modal;\n  useEffect(() => {\n    const favicon = document.getElementById('favicon');\n    favicon.href = isLoss ? redDot : greenDot;\n  }, [isLoss]);\n  const TP = (gain / (grandTotal / 100)).toFixed(1);\n  const TPwtBTC = (gain / ((grandTotal - BTCTotal) / 100)).toFixed(1);\n  const todayFearIndex = fearIndex === null || fearIndex === void 0 ? void 0 : fearIndex[0];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: 'rgba(0, 0, 0, 0.8)',\n      height: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-responsive table-striped\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table table-dark table-striped\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Asset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [Object.keys(summary).map(key => {\n            const {\n              coin,\n              price,\n              total,\n              name,\n              pair\n            } = summary[key];\n            return /*#__PURE__*/_jsxDEV(Item, {\n              pair: pair,\n              coin: coin,\n              price: price,\n              name: name,\n              total: total,\n              isLoss: isLoss,\n              TPwtBTC: TPwtBTC,\n              TP: TP\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 17\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(Item, {\n            price: \"Total:\",\n            total: grandTotal,\n            isBold: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 20\n      },\n      children: grandTotal > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `alert ${isLoss ? 'alert-danger' : 'alert-success'}`,\n        children: [\"Gain\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [formatter.format(gain), \" (\", precent, \"%)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this), isLoss && /*#__PURE__*/_jsxDEV(Note, {\n          total: grandTotal,\n          losses: Math.abs(gain)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: 500,\n        maxWidth: '100%'\n      },\n      className: \"cart\",\n      children: /*#__PURE__*/_jsxDEV(Chart, {\n        width: '100%',\n        height: '300px',\n        chartType: \"PieChart\",\n        loader: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 19\n        }, this),\n        data: [['Asset', 'Value'], ...Object.keys(summary).map(key => {\n          const {\n            coin,\n            price,\n            total,\n            name,\n            color\n          } = summary[key];\n          return [name, total];\n        })],\n        rootProps: {\n          'data-testid': '1'\n        },\n        options: {\n          backgroundColor: '333333',\n          legend: {\n            textStyle: {\n              color: 'white'\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 7\n    }, this), todayFearIndex && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 20\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `alert`,\n        style: {\n          backgroundColor: `#${fngColouring(+(todayFearIndex === null || todayFearIndex === void 0 ? void 0 : todayFearIndex.value))}`\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Fear Index\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, this), \": \", todayFearIndex === null || todayFearIndex === void 0 ? void 0 : todayFearIndex.value_classification, \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: +(todayFearIndex === null || todayFearIndex === void 0 ? void 0 : todayFearIndex.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 79\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 26\n    }, this), rsi > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 20,\n        paddingTop: 0,\n        marginTop: -15,\n        color: 'white'\n      },\n      children: [\"Daily RSI : \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: rsi.toFixed(2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'none'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: redDot\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: greenDot\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 270,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"G72OBKeVlthii+Rq/Z7qPkqlWyk=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sandro.brayen/Documents/private-project/crypto-asset/src/App.js"],"names":["React","useEffect","useState","useMemo","ImageMasonry","Chart","Item","Note","redDot","greenDot","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","pairs","btc_idr","asset","name","color","eth_idr","ada_idr","theta_idr","bnb_idr","cake_idr","uni_idr","link_idr","sol_idr","xrp_idr","doge_idr","usdt_idr","BINACE_pairs","ONEUSDT","inUSD","ADAUSDT","fngColouring","indexValue","colorCode","modal","timer","App","grandTotal","setTotal","summary","setSummary","precent","setPercent","BTCTotal","setBTCTotal","fearIndex","setFearIndex","rsi","setRsi","clearInterval","fetchData","requestArr","push","fetch","cache","key","pair","BIDRRes","idxRes","tkoRes","Promise","all","price","IDRPrice","symbol","json","idxData","tickers","total","summaryData","keys","Object","i","length","coin","last","v","Number","replace","toUpperCase","res","growthPercent","toFixed","document","title","format","setTimeout","e","console","log","data","value","isLoss","gain","favicon","getElementById","href","TP","TPwtBTC","todayFearIndex","backgroundColor","height","map","padding","Math","abs","width","maxWidth","legend","textStyle","value_classification","paddingTop","marginTop","display"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useMemo } from 'react';\nimport ImageMasonry from 'react-image-masonry';\nimport { Chart } from 'react-google-charts';\nimport Item from './components/Item';\nimport Note from './components/Note';\nimport redDot from './img/red-dot.png';\nimport greenDot from './img/green-dot.png';\nimport './style.scss';\n\nconst formatter = new Intl.NumberFormat('id', {\n  style: 'currency',\n  currency: 'IDR',\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 0\n});\n\nconst pairs = {\n  btc_idr: {\n    asset: 0.10091006 //cold\n      + 0.0353102, //tokocrypto\n    name: 'BTC',\n    color: '#EBAC1C'\n  },\n  eth_idr: {\n    asset: 0.56278735 //cold\n      + 0.06709137, //tokocrypto\n    name: 'ETH',\n    color: '#000000',\n  },\n  ada_idr: {\n    asset: 2497.666734 // 553.115524 + 283.0657 + 169.829 + 924.22351 + 567.433\n      + 305.15864, //tokocrypto\n    name: 'ADA',\n    color: '#1365EA'\n  },\n  theta_idr: {\n    asset: 177.9221,\n    name: 'THETA',\n    color: '#5C50DD'\n  },\n  bnb_idr: {\n    asset: 0.61486509,\n    name: 'BNB',\n    color: '#FC5731'\n  },\n  cake_idr: {\n    asset: 5.7543806\n      + 21.6, //indodax\n    name: 'CAKE',\n    color: '#5CACDD'\n  },\n  uni_idr: {\n    asset: 5.81466346,\n    name: 'UNI',\n    color: '#fcc19b',\n  },\n  link_idr: {\n    asset: 5.37634408,\n    name: 'LINK',\n    color: '#fcc19b',\n  },\n  sol_idr: {\n    asset: 3.76353346,\n    name: 'SOL',\n    color: '#5CACDD'\n  },\n  xrp_idr: {\n    asset: 46.95399,\n    name: 'XRP',\n    color: '#CFE542'\n  },\n  doge_idr: {\n    asset: 1023.80390000,\n    name: 'DOGE',\n    color: '#fce51c',\n  },\n  usdt_idr: {\n    asset: 1129 * 0,\n    name: 'USDT',\n    color: '#8c8c8c'\n  },\n};\n\nconst BINACE_pairs = {\n  ONEUSDT: {\n    asset: 1853.43648,\n    name: 'ONE',\n    color: '#8c8c8c',\n    inUSD: true,\n  },\n  ADAUSDT: {\n    asset: 0,\n    name: 'ADA',\n    color: '#8c8c8c',\n    inUSD: true,\n  }\n}\n\nfunction fngColouring(indexValue) {\n  let colorCode = ''\n  if (indexValue >= 90) { colorCode = '65c64c' }\n  if (indexValue < 90) { colorCode = '79d23c' }\n  if (indexValue <= 75) { colorCode = '9bbe44' }\n  if (indexValue <= 63) { colorCode = 'c6bf22' }\n  if (indexValue <= 54) { colorCode = 'dfce60' }\n  if (indexValue <= 46) { colorCode = 'd8bc59' }\n  if (indexValue <= 35) { colorCode = 'e39d64' }\n  if (indexValue <= 25) { colorCode = 'd17339' }\n  if (indexValue <= 10) { colorCode = 'b74d34' }\n\n  return colorCode\n}\n\nconst modal = 61419031 - 4971934 - 2200714 - 3367336 + 10000000 + 5000000 +\n  5000000 + 1000000 + 1500000 + 1500000 + 1500000 + 2000000 + 2500000 + 3000000 +\n  3000000 + 2000000 + 1500000 + 1500000 + 1500000 + 3000000 + 3000000 +\n  2483889 + 3500000 + 3000000 + 3000000 + 1000000 + 1000000 + 381600 + 619504 + 5000000 + 2504010 + 4000000 + 4000000 + 1500000 + 750000 + 500000 + 250000 + 3000000 + 5000000 + 800000;\n\nlet timer;\n\nexport default function App() {\n  const [grandTotal, setTotal] = useState(0);\n  const [summary, setSummary] = useState({});\n  const [precent, setPercent] = useState(0);\n  const [BTCTotal, setBTCTotal] = useState(0);\n\n  const [fearIndex, setFearIndex] = useState([]);\n  const [rsi, setRsi] = useState(0);\n\n  useEffect(() => {\n\n    clearInterval(timer);\n    const fetchData = async () => {\n      try {\n\n        const requestArr = [];\n\n        requestArr.push(fetch(`https://api.binance.com/api/v3/ticker/price?symbol=USDTBIDR`, {\n          cache: 'no-cache'\n        }));\n\n\n        requestArr.push(fetch(`https://indodax.com/api/summaries`, {\n          cache: 'no-cache'\n        }))\n\n        for (let key in BINACE_pairs) {\n          const pair = BINACE_pairs[key];\n          const { name } = pair;\n\n          requestArr.push(fetch(`https://api.binance.com/api/v3/ticker/price?symbol=` + key, {\n            cache: 'no-cache'\n          }));\n\n        }\n\n        const [BIDRRes, idxRes, ...tkoRes] = await Promise.all(requestArr);\n\n        const {price: IDRPrice, symbol} = await BIDRRes.json();\n\n\n        const idxData = await idxRes.json();\n        const { tickers } = idxData;\n        let total = 0;\n\n        const summaryData = {};\n\n        let keys = Object.keys(pairs);\n        for (let i = 0; i < keys.length; i++) {\n          let key = keys[i];\n          const coin = pairs[key].asset;\n          const name = pairs[key].name;\n          const color = pairs[key].color;\n          const { last: price } = tickers[key];\n          const v = coin * Number(price);\n\n          if (name === 'BTC') {\n            setBTCTotal(v);\n          }\n\n          summaryData[key] = {\n            pair: key.replace('_', '').toUpperCase(),\n            color,\n            name,\n            coin,\n            price: price,\n            total: v\n          };\n          total += v;\n        }\n\n        for (let i in tkoRes) {\n          const res = await tkoRes[i].json();\n          let { price, symbol } = res;\n          if(symbol in BINACE_pairs){\n            const {asset, name, color, inUSD} = BINACE_pairs[symbol];\n            if(inUSD){\n              price = IDRPrice * price;\n            }\n\n            const v = asset * Number(price);\n            summaryData[symbol] = {\n              pair: symbol,\n              color,\n              name,\n              coin: asset,\n              price,\n              total: v,\n            }\n\n            total += v;\n          }\n        }\n\n        const growthPercent = ((total - modal) / (modal / 100)).toFixed(1);\n\n        setTotal(total);\n        setSummary(summaryData);\n        setPercent(growthPercent);\n        document.title = `My Gain:  ${formatter.format(\n          total - modal\n        )} (${growthPercent}%)`;\n\n        timer = setTimeout(() => {\n          fetchData();\n        }, 3000);\n      } catch (e) {\n        console.log('error', e);\n        fetchData();\n      }\n\n      try {\n        const res = await fetch(`https://api.alternative.me/fng/?limit=2`, {\n          cache: 'no-cache'\n        });\n\n        const data = await res.json();\n        setFearIndex(data.data);\n      } catch (e) {\n        console.log('error', e);\n      }\n\n      try {\n        const res = await fetch(`https://api.taapi.io/rsi?secret=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb2JyYXllbkBnbWFpbC5jb20iLCJpYXQiOjE2NDI4ODQyNTksImV4cCI6Nzk1MDA4NDI1OX0.ZYR1fjAYGGkUgW1DpcUxYbB4cQ9ff9jHSJCWg5YShAc&exchange=binance&symbol=BTC/USDT&interval=1d`);\n        const data = await res.json();\n        if (data.value) {\n          setRsi(data.value);\n        }\n      } catch (e) {\n        console.log('error', e);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const isLoss = grandTotal < modal;\n  const gain = grandTotal - modal;\n\n  useEffect(() => {\n    const favicon = document.getElementById('favicon');\n    favicon.href = isLoss ? redDot : greenDot;\n  }, [isLoss]);\n\n  const TP = (gain / (grandTotal / 100)).toFixed(1);\n  const TPwtBTC = (gain / ((grandTotal - BTCTotal) / 100)).toFixed(1);\n  const todayFearIndex = fearIndex?.[0];\n\n  return (\n    <div style={{ backgroundColor: 'rgba(0, 0, 0, 0.8)', height: '100%' }}>\n      <div className=\"table-responsive table-striped\">\n        <table className=\"table table table-dark table-striped\">\n          <thead>\n            <tr>\n              <th>Asset</th>\n              <th>Price</th>\n              <th>Total</th>\n              {/* <th>TP</th>*/}\n            </tr>\n          </thead>\n          <tbody>\n            {Object.keys(summary).map(key => {\n              const { coin, price, total, name, pair } = summary[key];\n              return (\n                <Item\n                  pair={pair}\n                  key={key}\n                  coin={coin}\n                  price={price}\n                  name={name}\n                  total={total}\n                  isLoss={isLoss}\n                  TPwtBTC={TPwtBTC}\n                  TP={TP}\n                />\n              );\n            })}\n            <Item price=\"Total:\" total={grandTotal} isBold />\n          </tbody>\n        </table>\n      </div>\n      <div style={{ padding: 20 }}>\n        {grandTotal > 0 && (\n          <div className={`alert ${isLoss ? 'alert-danger' : 'alert-success'}`}>\n            Gain{' '}\n            <strong>\n              {formatter.format(gain)} ({precent}%)\n            </strong>\n\n            {/* !isLoss && ` | TP ${TP}%\n            or ${TPwtBTC}% ALTs` */}\n\n            {isLoss && <Note total={grandTotal} losses={Math.abs(gain)} />}\n          </div>\n        )}\n      </div>\n      <div style={{ width: 500, maxWidth: '100%' }} className=\"cart\">\n        <Chart\n          width={'100%'}\n          height={'300px'}\n          chartType=\"PieChart\"\n          loader={<div />}\n          data={[\n            ['Asset', 'Value'],\n            ...Object.keys(summary).map(key => {\n              const { coin, price, total, name, color } = summary[key];\n              return [name, total];\n            })\n          ]}\n          rootProps={{ 'data-testid': '1' }}\n          options={{\n            backgroundColor: '333333',\n            legend: {\n              textStyle: {\n                color: 'white'\n              }\n            }\n          }}\n        />\n      </div>\n\n      {todayFearIndex && <div style={{ padding: 20 }}>\n        <div className={`alert`} style={{ backgroundColor: `#${fngColouring(+todayFearIndex?.value)}` }}>\n          <strong>Fear Index</strong>: {todayFearIndex?.value_classification} <strong>{+todayFearIndex?.value}</strong>\n        </div>\n      </div>}\n\n      {rsi > 0 && (<div style={{ padding: 20, paddingTop: 0, marginTop: -15, color: 'white' }}>\n        Daily RSI : <strong>{rsi.toFixed(2)}</strong>\n      </div>)}\n      {/*\n      <ImageMasonry\n        imageUrls={[\n          'https://media.giphy.com/media/XUojAIMYIIOQ9tpx2s/giphy.gif',\n          'https://media.giphy.com/media/mz7iww9tCUnJJeZvGN/giphy.gif',\n          'https://media.giphy.com/media/sTgTWEcVGK7CW3BQa7/giphy.gif',\n          'https://media.giphy.com/media/DxbAro4C39Qi5kJmPb/giphy.gif',\n          'https://media.giphy.com/media/qjSxTWJxqH4YDuIrOs/giphy.gif',\n          'https://media.giphy.com/media/KI9oNS4JBemyI/giphy.gif',\n          'https://media.giphy.com/media/7FBY7h5Psqd20/giphy.gif',\n          'https://media.giphy.com/media/Ogak8XuKHLs6PYcqlp/giphy.gif',\n          'https://media.giphy.com/media/FknIfejNbViSs/giphy.gif'\n        ]}\n        numCols={3}\n        containerWidth={'100%'}\n      />\n\n   */}\n      <div style={{ display: 'none' }}>\n        <img src={redDot} />\n        <img src={greenDot} />\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}