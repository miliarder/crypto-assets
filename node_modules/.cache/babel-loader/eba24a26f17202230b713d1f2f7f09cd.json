{"ast":null,"code":"var _jsxFileName = \"/Users/sandro.brayen/Documents/private-project/crypto-asset/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useMemo } from 'react';\nimport ImageMasonry from 'react-image-masonry';\nimport { Chart } from 'react-google-charts';\nimport Item from './components/Item';\nimport Note from './components/Note';\nimport redDot from './img/red-dot.png';\nimport greenDot from './img/green-dot.png';\nimport './style.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatter = new Intl.NumberFormat('id', {\n  style: 'currency',\n  currency: 'IDR',\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 0\n});\nconst pairs = {\n  btc_idr: {\n    asset: 0.10091006 //cold\n    + 0.02090499,\n    //tokocrypto\n    name: 'BTC',\n    color: '#EBAC1C'\n  },\n  eth_idr: {\n    asset: 0.56278735 //cold\n    + 0.02641785,\n    //tokocrypto\n    name: 'ETH',\n    color: '#000000'\n  },\n  ada_idr: {\n    asset: 2497.666734,\n    // 553.115524 + 283.0657 + 169.829 + 924.22351 + 567.433\n    name: 'ADA',\n    color: '#1365EA'\n  },\n  theta_idr: {\n    asset: 177.9221,\n    name: 'THETA',\n    color: '#5C50DD'\n  },\n  bnb_idr: {\n    asset: 0.61486509,\n    name: 'BNB',\n    color: '#FC5731'\n  },\n  cake_idr: {\n    asset: 5.7543806,\n    name: 'CAKE',\n    color: '#5CACDD'\n  },\n  uni_idr: {\n    asset: 5.81466346,\n    name: 'UNI',\n    color: '#fcc19b'\n  },\n  link_idr: {\n    asset: 5.37634408,\n    name: 'LINK',\n    color: '#fcc19b'\n  },\n  sol_idr: {\n    asset: 3.76353346,\n    name: 'SOL',\n    color: '#5CACDD'\n  },\n\n  /*  tfuel_idr: {\n      asset: 0,\n      name: 'TFUEL',\n      color: '#CFE542'\n    },\n    */\n  doge_idr: {\n    asset: 1023.80390000,\n    name: 'DOGE',\n    color: '#fce51c'\n  },\n  usdt_idr: {\n    asset: 1129 * 0,\n    name: 'USDT',\n    color: '#8c8c8c'\n  }\n};\n\nfunction fngColouring(indexValue) {\n  let colorCode = '';\n\n  if (indexValue >= 90) {\n    colorCode = '65c64c';\n  }\n\n  if (indexValue < 90) {\n    colorCode = '79d23c';\n  }\n\n  if (indexValue <= 75) {\n    colorCode = '9bbe44';\n  }\n\n  if (indexValue <= 63) {\n    colorCode = 'c6bf22';\n  }\n\n  if (indexValue <= 54) {\n    colorCode = 'dfce60';\n  }\n\n  if (indexValue <= 46) {\n    colorCode = 'd8bc59';\n  }\n\n  if (indexValue <= 35) {\n    colorCode = 'e39d64';\n  }\n\n  if (indexValue <= 25) {\n    colorCode = 'd17339';\n  }\n\n  if (indexValue <= 10) {\n    colorCode = 'b74d34';\n  }\n\n  return colorCode;\n}\n\nconst modal = 61419031 - 4971934 - 2200714 - 3367336 + 10000000 + 5000000 + 5000000 + 1000000 + 1500000 + 1500000 + 1500000 + 2000000 + 2500000 + 3000000 + 3000000 + 2000000 + 1500000 + 1500000 + 1500000 + 3000000 + 3000000 + 2483889 + 3500000 + 3000000 + 3000000 + 1000000 + 1000000 + 381600 + 619504 + 5000000 + 2504010 + 4000000 + 4000000 + 1500000;\nlet timer;\nexport default function App() {\n  _s();\n\n  const [grandTotal, setTotal] = useState(0);\n  const [summary, setSummary] = useState({});\n  const [precent, setPercent] = useState(0);\n  const [BTCTotal, setBTCTotal] = useState(0);\n  const [fearIndex, setFearIndex] = useState([]);\n  const [rsi, setRsi] = useState(0);\n  useEffect(() => {\n    clearInterval(timer);\n\n    const fetchData = async () => {\n      try {\n        const res = await fetch(`https://indodax.com/api/summaries`, {\n          cache: 'no-cache'\n        });\n        const data = await res.json();\n        const {\n          tickers\n        } = data;\n        let total = 0;\n        const summaryData = {};\n        let keys = Object.keys(pairs);\n\n        for (let i = 0; i < keys.length; i++) {\n          let key = keys[i];\n          const coin = pairs[key].asset;\n          const name = pairs[key].name;\n          const color = pairs[key].color;\n          const {\n            last: price\n          } = tickers[key];\n          const v = coin * Number(price);\n\n          if (name === 'BTC') {\n            setBTCTotal(v);\n          }\n\n          summaryData[key] = {\n            pair: key.replace('_', '').toUpperCase(),\n            color,\n            name,\n            coin,\n            price: price,\n            total: v\n          };\n          total += v;\n        }\n\n        const growthPercent = ((total - modal) / (modal / 100)).toFixed(1);\n        setTotal(total);\n        setSummary(summaryData);\n        setPercent(growthPercent);\n        document.title = `My Gain:  ${formatter.format(total - modal)} (${growthPercent}%)`;\n        timer = setTimeout(() => {\n          fetchData();\n        }, 3000);\n      } catch (e) {\n        console.log('error', e);\n        fetchData();\n      }\n\n      try {\n        const res = await fetch(`https://api.alternative.me/fng/?limit=2`, {\n          cache: 'no-cache'\n        });\n        const data = await res.json();\n        setFearIndex(data.data);\n      } catch (e) {\n        console.log('error', e);\n      }\n\n      try {\n        const res = await fetch(`https://api.taapi.io/rsi?secret=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb2JyYXllbkBnbWFpbC5jb20iLCJpYXQiOjE2NDI4ODQyNTksImV4cCI6Nzk1MDA4NDI1OX0.ZYR1fjAYGGkUgW1DpcUxYbB4cQ9ff9jHSJCWg5YShAc&exchange=binance&symbol=BTC/USDT&interval=1d`);\n        const data = await res.json();\n\n        if (data.value) {\n          setRsi(data.value);\n        }\n      } catch (e) {\n        console.log('error', e);\n      }\n    };\n\n    fetchData();\n  }, []);\n  const isLoss = grandTotal < modal;\n  const gain = grandTotal - modal;\n  useEffect(() => {\n    const favicon = document.getElementById('favicon');\n    favicon.href = isLoss ? redDot : greenDot;\n  }, [isLoss]);\n  const TP = (gain / (grandTotal / 100)).toFixed(1);\n  const TPwtBTC = (gain / ((grandTotal - BTCTotal) / 100)).toFixed(1);\n  console.log(fearIndex);\n  const todayFearIndex = fearIndex === null || fearIndex === void 0 ? void 0 : fearIndex[0];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: 'rgba(0, 0, 0, 0.8)',\n      height: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-responsive table-striped\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table table-dark table-striped\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Asset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [Object.keys(summary).map(key => {\n            const {\n              coin,\n              price,\n              total,\n              name,\n              pair\n            } = summary[key];\n            return /*#__PURE__*/_jsxDEV(Item, {\n              pair: pair,\n              coin: coin,\n              price: price,\n              name: name,\n              total: total,\n              isLoss: isLoss,\n              TPwtBTC: TPwtBTC,\n              TP: TP\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 17\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(Item, {\n            price: \"Total:\",\n            total: grandTotal,\n            isBold: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 20\n      },\n      children: grandTotal > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `alert ${isLoss ? 'alert-danger' : 'alert-success'}`,\n        children: [\"Gain\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [formatter.format(gain), \" (\", precent, \"%)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this), isLoss && /*#__PURE__*/_jsxDEV(Note, {\n          total: grandTotal,\n          losses: Math.abs(gain)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: 500,\n        maxWidth: '100%'\n      },\n      className: \"cart\",\n      children: /*#__PURE__*/_jsxDEV(Chart, {\n        width: '100%',\n        height: '300px',\n        chartType: \"PieChart\",\n        loader: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 19\n        }, this),\n        data: [['Asset', 'Value'], ...Object.keys(summary).map(key => {\n          const {\n            coin,\n            price,\n            total,\n            name,\n            color\n          } = summary[key];\n          return [name, total];\n        })],\n        rootProps: {\n          'data-testid': '1'\n        },\n        options: {\n          backgroundColor: '333333',\n          legend: {\n            textStyle: {\n              color: 'white'\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this), todayFearIndex && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 20\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `alert`,\n        style: {\n          backgroundColor: `#${fngColouring(+(todayFearIndex === null || todayFearIndex === void 0 ? void 0 : todayFearIndex.value))}`\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Fear Index\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this), \": \", todayFearIndex === null || todayFearIndex === void 0 ? void 0 : todayFearIndex.value_classification, \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: +(todayFearIndex === null || todayFearIndex === void 0 ? void 0 : todayFearIndex.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 79\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 26\n    }, this), rsi > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 20,\n        paddingTop: 0,\n        marginTop: -15,\n        color: 'white'\n      },\n      children: [\"Daily RSI : \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: rsi.toFixed(2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'none'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: redDot\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: greenDot\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"G72OBKeVlthii+Rq/Z7qPkqlWyk=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sandro.brayen/Documents/private-project/crypto-asset/src/App.js"],"names":["React","useEffect","useState","useMemo","ImageMasonry","Chart","Item","Note","redDot","greenDot","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","pairs","btc_idr","asset","name","color","eth_idr","ada_idr","theta_idr","bnb_idr","cake_idr","uni_idr","link_idr","sol_idr","doge_idr","usdt_idr","fngColouring","indexValue","colorCode","modal","timer","App","grandTotal","setTotal","summary","setSummary","precent","setPercent","BTCTotal","setBTCTotal","fearIndex","setFearIndex","rsi","setRsi","clearInterval","fetchData","res","fetch","cache","data","json","tickers","total","summaryData","keys","Object","i","length","key","coin","last","price","v","Number","pair","replace","toUpperCase","growthPercent","toFixed","document","title","format","setTimeout","e","console","log","value","isLoss","gain","favicon","getElementById","href","TP","TPwtBTC","todayFearIndex","backgroundColor","height","map","padding","Math","abs","width","maxWidth","legend","textStyle","value_classification","paddingTop","marginTop","display"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useMemo } from 'react';\nimport ImageMasonry from 'react-image-masonry';\nimport { Chart } from 'react-google-charts';\nimport Item from './components/Item';\nimport Note from './components/Note';\nimport redDot from './img/red-dot.png';\nimport greenDot from './img/green-dot.png';\nimport './style.scss';\n\nconst formatter = new Intl.NumberFormat('id', {\n  style: 'currency',\n  currency: 'IDR',\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 0\n});\n\nconst pairs = {\n  btc_idr: {\n    asset: 0.10091006 //cold\n        + 0.02090499, //tokocrypto\n    name: 'BTC',\n    color: '#EBAC1C'\n  },\n  eth_idr: {\n    asset: 0.56278735 //cold\n        + 0.02641785, //tokocrypto\n    name: 'ETH',\n    color: '#000000',\n  },\n  ada_idr: {\n    asset: 2497.666734, // 553.115524 + 283.0657 + 169.829 + 924.22351 + 567.433\n    name: 'ADA',\n    color: '#1365EA'\n  },\n  theta_idr: {\n    asset: 177.9221,\n    name: 'THETA',\n    color: '#5C50DD'\n  },\n  bnb_idr: {\n    asset: 0.61486509,\n    name: 'BNB',\n    color: '#FC5731'\n  },\n  cake_idr: {\n    asset: 5.7543806,\n    name: 'CAKE',\n    color: '#5CACDD'\n  },\n  uni_idr: {\n    asset: 5.81466346,\n    name: 'UNI',\n    color: '#fcc19b',\n  },\n  link_idr: {\n    asset: 5.37634408,\n    name: 'LINK',\n    color: '#fcc19b',\n  },\n  sol_idr: {\n    asset: 3.76353346,\n    name: 'SOL',\n    color: '#5CACDD'\n  },\n/*  tfuel_idr: {\n    asset: 0,\n    name: 'TFUEL',\n    color: '#CFE542'\n  },\n  */\n  doge_idr: {\n    asset: 1023.80390000,\n    name: 'DOGE',\n    color: '#fce51c',\n  },\n  usdt_idr: {\n    asset: 1129 * 0,\n    name: 'USDT',\n    color: '#8c8c8c'\n  },\n};\n\nfunction fngColouring(indexValue) {\n  let colorCode = ''\n  if (indexValue >= 90) { colorCode = '65c64c'}\n  if (indexValue <  90) { colorCode = '79d23c'}\n  if (indexValue <= 75) { colorCode = '9bbe44'}\n  if (indexValue <= 63) { colorCode = 'c6bf22'}\n  if (indexValue <= 54) { colorCode = 'dfce60'}\n  if (indexValue <= 46) { colorCode = 'd8bc59'}\n  if (indexValue <= 35) { colorCode = 'e39d64'}\n  if (indexValue <= 25) { colorCode = 'd17339'}\n  if (indexValue <= 10) { colorCode = 'b74d34'}\n\n  return colorCode\n}\n\nconst modal = 61419031 - 4971934 - 2200714 - 3367336 + 10000000 + 5000000 +\n  5000000 + 1000000 + 1500000 + 1500000 + 1500000 + 2000000 + 2500000 + 3000000 +\n    3000000 + 2000000 + 1500000 + 1500000 + 1500000 + 3000000 + 3000000 +\n    2483889 + 3500000 + 3000000 + 3000000 + 1000000 + 1000000 + 381600 + 619504 + 5000000 + 2504010 + 4000000 + 4000000 + 1500000;\n\nlet timer;\n\nexport default function App() {\n  const [grandTotal, setTotal] = useState(0);\n  const [summary, setSummary] = useState({});\n  const [precent, setPercent] = useState(0);\n  const [BTCTotal, setBTCTotal] = useState(0);\n\n  const [fearIndex, setFearIndex] = useState([]);\n  const [rsi, setRsi] = useState(0);\n\n  useEffect(() => {\n\n    clearInterval(timer);\n    const fetchData = async () => {\n      try {\n        const res = await fetch(`https://indodax.com/api/summaries`, {\n          cache: 'no-cache'\n        });\n        const data = await res.json();\n\n        const { tickers } = data;\n        let total = 0;\n\n        const summaryData = {};\n\n        let keys = Object.keys(pairs);\n        for (let i = 0; i < keys.length; i++) {\n          let key = keys[i];\n          const coin = pairs[key].asset;\n          const name = pairs[key].name;\n          const color = pairs[key].color;\n          const { last: price } = tickers[key];\n          const v = coin * Number(price);\n\n          if(name === 'BTC') {\n            setBTCTotal(v);\n          }\n\n          summaryData[key] = {\n            pair: key.replace('_','').toUpperCase(),\n            color,\n            name,\n            coin,\n            price: price,\n            total: v\n          };\n          total += v;\n        }\n\n        const growthPercent = ((total - modal) / (modal / 100)).toFixed(1);\n\n        setTotal(total);\n        setSummary(summaryData);\n        setPercent(growthPercent);\n        document.title = `My Gain:  ${formatter.format(\n          total - modal\n        )} (${growthPercent}%)`;\n\n        timer = setTimeout(() => {\n          fetchData();\n        }, 3000);\n      } catch (e) {\n        console.log('error', e);\n        fetchData();\n      }\n\n      try {\n        const res = await fetch(`https://api.alternative.me/fng/?limit=2`, {\n          cache: 'no-cache'\n        });\n\n        const data = await res.json();\n        setFearIndex(data.data);\n      } catch (e){\n        console.log('error', e);\n      }\n\n      try {\n        const res = await fetch(`https://api.taapi.io/rsi?secret=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb2JyYXllbkBnbWFpbC5jb20iLCJpYXQiOjE2NDI4ODQyNTksImV4cCI6Nzk1MDA4NDI1OX0.ZYR1fjAYGGkUgW1DpcUxYbB4cQ9ff9jHSJCWg5YShAc&exchange=binance&symbol=BTC/USDT&interval=1d`);\n        const data = await res.json();\n        if(data.value){\n          setRsi(data.value);\n        }\n      } catch (e) {\n        console.log('error', e);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const isLoss = grandTotal < modal;\n  const gain = grandTotal - modal;\n\n  useEffect(() => {\n    const favicon = document.getElementById('favicon');\n    favicon.href = isLoss ? redDot : greenDot;\n  }, [isLoss]);\n\n  const TP = (gain / (grandTotal / 100)).toFixed(1);\n  const TPwtBTC = (gain / ((grandTotal - BTCTotal) / 100)).toFixed(1);\nconsole.log(fearIndex);\n  const todayFearIndex = fearIndex?.[0];\n\n  return (\n    <div style={{backgroundColor: 'rgba(0, 0, 0, 0.8)', height: '100%'}}>\n      <div className=\"table-responsive table-striped\">\n        <table className=\"table table table-dark table-striped\">\n          <thead>\n            <tr>\n              <th>Asset</th>\n              <th>Price</th>\n              <th>Total</th>\n             {/* <th>TP</th>*/}\n            </tr>\n          </thead>\n          <tbody>\n            {Object.keys(summary).map(key => {\n              const { coin, price, total, name, pair } = summary[key];\n              return (\n                <Item\n                  pair={pair}\n                  key={key}\n                  coin={coin}\n                  price={price}\n                  name={name}\n                  total={total}\n                  isLoss={isLoss}\n                  TPwtBTC={TPwtBTC}\n                  TP={TP}\n                />\n              );\n            })}\n            <Item price=\"Total:\" total={grandTotal} isBold />\n          </tbody>\n        </table>\n      </div>\n      <div style={{ padding: 20 }}>\n        {grandTotal > 0 && (\n          <div className={`alert ${isLoss ? 'alert-danger' : 'alert-success'}`}>\n            Gain{' '}\n            <strong>\n              {formatter.format(gain)} ({precent}%)\n            </strong>\n\n            {/* !isLoss && ` | TP ${TP}%\n            or ${TPwtBTC}% ALTs` */}\n\n            {isLoss && <Note total={grandTotal} losses={Math.abs(gain)}/>}\n          </div>\n        )}\n      </div>\n      <div style={{ width: 500, maxWidth: '100%' }} className=\"cart\">\n        <Chart\n          width={'100%'}\n          height={'300px'}\n          chartType=\"PieChart\"\n          loader={<div />}\n          data={[\n            ['Asset', 'Value'],\n            ...Object.keys(summary).map(key => {\n              const { coin, price, total, name, color } = summary[key];\n              return [name, total];\n            })\n          ]}\n          rootProps={{ 'data-testid': '1' }}\n          options={{\n            backgroundColor: '333333',\n            legend: {\n              textStyle: {\n                color: 'white'\n              }\n            }\n          }}\n        />\n      </div>\n\n      {todayFearIndex && <div style={{padding: 20}}>\n        <div className={`alert`} style={{backgroundColor: `#${fngColouring(+todayFearIndex?.value)}`}}>\n          <strong>Fear Index</strong>: {todayFearIndex?.value_classification} <strong>{+todayFearIndex?.value}</strong>\n        </div>\n      </div>}\n\n      {rsi > 0 && (<div style={{padding: 20, paddingTop: 0, marginTop: -15, color: 'white'}}>\n        Daily RSI : <strong>{rsi.toFixed(2)}</strong>\n        </div>)}\n     {/*\n      <ImageMasonry\n        imageUrls={[\n          'https://media.giphy.com/media/XUojAIMYIIOQ9tpx2s/giphy.gif',\n          'https://media.giphy.com/media/mz7iww9tCUnJJeZvGN/giphy.gif',\n          'https://media.giphy.com/media/sTgTWEcVGK7CW3BQa7/giphy.gif',\n          'https://media.giphy.com/media/DxbAro4C39Qi5kJmPb/giphy.gif',\n          'https://media.giphy.com/media/qjSxTWJxqH4YDuIrOs/giphy.gif',\n          'https://media.giphy.com/media/KI9oNS4JBemyI/giphy.gif',\n          'https://media.giphy.com/media/7FBY7h5Psqd20/giphy.gif',\n          'https://media.giphy.com/media/Ogak8XuKHLs6PYcqlp/giphy.gif',\n          'https://media.giphy.com/media/FknIfejNbViSs/giphy.gif'\n        ]}\n        numCols={3}\n        containerWidth={'100%'}\n      />\n\n   */}\n      <div style={{ display: 'none' }}>\n        <img src={redDot} />\n        <img src={greenDot} />\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}