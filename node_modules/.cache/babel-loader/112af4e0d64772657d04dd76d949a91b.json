{"ast":null,"code":"import _slicedToArray from\"/Users/sandro.brayen/Documents/private-project/crypto-asset/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import'./styles.scss';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var formatter=new Intl.NumberFormat('id',{style:'currency',currency:'IDR',// These options are needed to round to whole numbers if that's what you want.\nminimumFractionDigits:0,// (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\nmaximumFractionDigits:0// (causes 2500.99 to be printed as $2,501)\n});function Item(props){var coin=props.coin,price=props.price,total=props.total,name=props.name,isBold=props.isBold,TP=props.TP,TPwtBTC=props.TPwtBTC,pair=props.pair;var _useState=useState(total),_useState2=_slicedToArray(_useState,2),currentTotal=_useState2[0],setCurrentTotal=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),className=_useState4[0],setClassName=_useState4[1];useEffect(function(){if(total<currentTotal){setClassName('loss');}else if(total===currentTotal){setClassName('');}else{setClassName('gain');}setTimeout(function(){setClassName('');},1000);setCurrentTotal(total);},[total]);return/*#__PURE__*/_jsxs(\"tr\",{className:className,children:[/*#__PURE__*/_jsx(\"td\",{children:pair&&/*#__PURE__*/_jsxs(\"a\",{className:\"asset-name\",target:\"_blank\",href:\"https://indodax.com/market/\".concat(pair),children:[coin,\" \",name]})}),/*#__PURE__*/_jsx(\"td\",{children:price>0?/*#__PURE__*/_jsx(\"a\",{className:\"asset-name\",target:\"_blank\",href:\"https://indodax.com/chart/\".concat(pair),children:formatter.format(price)}):price}),/*#__PURE__*/_jsx(\"td\",{className:isBold?'bold':'',children:formatter.format(total)})]});}export default Item;","map":{"version":3,"sources":["/Users/sandro.brayen/Documents/private-project/crypto-asset/src/components/Item/index.js"],"names":["React","useState","useEffect","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","Item","props","coin","price","total","name","isBold","TP","TPwtBTC","pair","currentTotal","setCurrentTotal","className","setClassName","setTimeout","format"],"mappings":"kLAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAO,eAAP,C,wFAEA,GAAMC,CAAAA,SAAS,CAAG,GAAIC,CAAAA,IAAI,CAACC,YAAT,CAAsB,IAAtB,CAA4B,CAC5CC,KAAK,CAAE,UADqC,CAE5CC,QAAQ,CAAE,KAFkC,CAI5C;AACAC,qBAAqB,CAAE,CALqB,CAKlB;AAC1BC,qBAAqB,CAAE,CAAE;AANmB,CAA5B,CAAlB,CASA,QAASC,CAAAA,IAAT,CAAcC,KAAd,CAAqB,CACnB,GAAQC,CAAAA,IAAR,CAAgED,KAAhE,CAAQC,IAAR,CAAcC,KAAd,CAAgEF,KAAhE,CAAcE,KAAd,CAAqBC,KAArB,CAAgEH,KAAhE,CAAqBG,KAArB,CAA4BC,IAA5B,CAAgEJ,KAAhE,CAA4BI,IAA5B,CAAkCC,MAAlC,CAAgEL,KAAhE,CAAkCK,MAAlC,CAA0CC,EAA1C,CAAgEN,KAAhE,CAA0CM,EAA1C,CAA8CC,OAA9C,CAAgEP,KAAhE,CAA8CO,OAA9C,CAAuDC,IAAvD,CAAgER,KAAhE,CAAuDQ,IAAvD,CAEA,cAAwClB,QAAQ,CAACa,KAAD,CAAhD,wCAAOM,YAAP,eAAqBC,eAArB,eACA,eAAkCpB,QAAQ,CAAC,EAAD,CAA1C,yCAAOqB,SAAP,eAAkBC,YAAlB,eAEArB,SAAS,CAAC,UAAM,CACd,GAAIY,KAAK,CAAGM,YAAZ,CAA0B,CACxBG,YAAY,CAAC,MAAD,CAAZ,CACD,CAFD,IAEO,IAAIT,KAAK,GAAKM,YAAd,CAA4B,CACjCG,YAAY,CAAC,EAAD,CAAZ,CACD,CAFM,IAEA,CACLA,YAAY,CAAC,MAAD,CAAZ,CACD,CAEDC,UAAU,CAAC,UAAM,CACfD,YAAY,CAAC,EAAD,CAAZ,CACD,CAFS,CAEP,IAFO,CAAV,CAIAF,eAAe,CAACP,KAAD,CAAf,CACD,CAdQ,CAcN,CAACA,KAAD,CAdM,CAAT,CAgBA,mBACE,YAAI,SAAS,CAAEQ,SAAf,wBACE,oBACGH,IAAI,eAAI,WAAG,SAAS,CAAC,YAAb,CAA0B,MAAM,CAAC,QAAjC,CAA0C,IAAI,sCAAgCA,IAAhC,CAA9C,WAAuFP,IAAvF,KAA8FG,IAA9F,GADX,EADF,cAIE,oBAAKF,KAAK,CAAG,CAAR,cAAY,UAAG,SAAS,CAAC,YAAb,CAA0B,MAAM,CAAC,QAAjC,CAA0C,IAAI,qCAA+BM,IAA/B,CAA9C,UAAsFhB,SAAS,CAACsB,MAAV,CAAiBZ,KAAjB,CAAtF,EAAZ,CAAiIA,KAAtI,EAJF,cAKE,WAAI,SAAS,CAAEG,MAAM,CAAG,MAAH,CAAY,EAAjC,UAAsCb,SAAS,CAACsB,MAAV,CAAiBX,KAAjB,CAAtC,EALF,GADF,CAaD,CAED,cAAeJ,CAAAA,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './styles.scss';\n\nconst formatter = new Intl.NumberFormat('id', {\n  style: 'currency',\n  currency: 'IDR',\n\n  // These options are needed to round to whole numbers if that's what you want.\n  minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n  maximumFractionDigits: 0 // (causes 2500.99 to be printed as $2,501)\n});\n\nfunction Item(props) {\n  const { coin, price, total, name, isBold, TP, TPwtBTC, pair } = props;\n\n  const [currentTotal, setCurrentTotal] = useState(total);\n  const [className, setClassName] = useState('');\n\n  useEffect(() => {\n    if (total < currentTotal) {\n      setClassName('loss');\n    } else if (total === currentTotal) {\n      setClassName('');\n    } else {\n      setClassName('gain');\n    }\n\n    setTimeout(() => {\n      setClassName('');\n    }, 1000);\n\n    setCurrentTotal(total);\n  }, [total]);\n\n  return (\n    <tr className={className}>\n      <td>\n        {pair && <a className='asset-name' target='_blank' href={`https://indodax.com/market/${pair}`}>{coin} {name}</a>}\n      </td>\n      <td>{price > 0 ? <a className='asset-name' target='_blank' href={`https://indodax.com/chart/${pair}`}>{formatter.format(price)}</a> : price}</td>\n      <td className={isBold ? 'bold' : ''}>{formatter.format(total)}</td>\n      {/*<td style={{ color: '#155724' }}>\n        { price > 0 && name === 'BTC' && `${(coin * TP / 100).toFixed(8)} BTC` }\n        { price > 0 && name !== 'BTC' &&  `${(coin * TP / 100).toFixed(4)} ${name} | ${(coin * TPwtBTC / 100).toFixed(4)} ${name}` }\n      </td>*/}\n    </tr>\n  );\n}\n\nexport default Item;\n"]},"metadata":{},"sourceType":"module"}